# Changes the music for towns to not include anything special inside of houses.
# The song used for inside houses previously is now used for the towns of
# Zakros and Pylos.

asm b=7

.org $cbc8              ; revert z2 redux random battle music code
    lda #$04
    sta $075f

.org $c42e              ; Change town for indoor music to 2 (Zakros)
    ldy $0748
    cpy #$30

.org $c436              ; revert z2 redux random battle music code
    sta $075f

.org $cf0e              ; Choose song when entering a town (19 bytes)
    jsr CheckRuinsMusic
    sta $075f
    rts
.db $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff

.org $cfdc              ; Handles leaving a building, changed to not reset the music (16 bytes)
    jmp $cfec
CheckRuinsMusic:        ; The towns with special music are entrance 48 in the
    tya                 ; west and 47 in the east.  This means the sum of the
    clc                 ; entrance id and the world id will be 49 (0x31)
    adc $0748           ; when the alternate music is needed.
    cmp #$31            ; I know this is wonky but I have very little space to
    beq RuinsMusic      ; work with here.
    lda #$01
    rts
.db $ff

.org $d02f              ; Handles entering a building, changed to not reset the music (14 bytes)
    rts
RuinsMusic:
    lda #$04
    rts
.db $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff

# Saves a copy of the world id in the unused $0702 to change the music for
# Stone Temple to be the normal palace music rather than Great Palace.

asm b=7
.org $feaa              ; Save world id and music world
SaveMusicWorld:
    sta $0707
    sta $0702
    cmp #$05            ; Check if we are entering Stone Temple
    bne NotStoneTemple
    lda $0561           ; Stone Temple entrance is room $0E, but The Abyss is $00
    beq NotStoneTemple
    dec $0702           ; Set music world to eastern palaces
NotStoneTemple:
    lda $0707
    rts

.org $cbaa              ; Original code to save the world id
    jsr SaveMusicWorld  ; replaces sta $0707

.end

# Use $0702 for "music world"
asm b=6
.org $9b24
    lda $0702
.org $9b80
    lda $0702
.end

# Play boss music when fighting Thunderbird
asm b=5

.org $a34b
    sta $057E,x         ; revert change to load boss music on entering thunderbird room

.org $a363
    jsr BossTime        ; replaces inc $0728

.org $bda1              ; 15 bytes free
BossTime:
    lda #$08
    sta $EB             ; Play music $08 (boss battle)
    inc $0728           ; Lock screen scrolling
    rts                 ; 7 bytes left
.end

# Title scroll fix
asm b=5

.org $a787
    lda $E8             ; current song id
    cmp #$03            ; start logo scroll when song $02 plays
    bcs Done
    lda $12             ; frame counter
    and #$03            ; every 4 frames
    bne Done
    inc $FC
Done:
    lda $F7
.end

# Change the music world when starting the game.  Otherwise you'll have the
# wrong music after a game over.
asm b=0
.org $aa0e
    jsr $feaa           ; replaces sta $0707 when starting the game
.end

# Make pulse1 quieter during the title screen
asm b=6

.org $8452
    jsr $8d80

.org $8d80
    lda $e8             ; current song
    lsr
    lda $8017,y
    bcc LoadAltEnvelope ; don't change the volume for song $01
    rts
LoadAltEnvelope:
    tax                 ; half the lower nybble of a to reduce the volume
    and #$f0
    sta $13
    txa
    and #$0f
    lsr
    ora $13
    rts
.end

# Change flute sound to classic zelda "secret found"
# Change raft sound to tloz recorder sound
asm b=6

.org $b780
RaftDurations:
.db $30,$38,$40,$60,$70,$7f
RaftNotes:
.db $4c,$4e,$50,$52,$48,$30
FluteDurations:
.db $28,$30,$38,$40,$48,$50,$58,$5f
FluteNotes:
.db $4a,$48,$30,$20,$22,$2e,$34,$36

.org $97e0              ; Raft duration and note count
    lda #$7f
    ldx #$05

.org $97f2
    cmp RaftDurations,y
    bne $9805
    lda RaftNotes,y

.org $9a20              ; Flute duration and note count
    lda #$5f
    ldx #$07

.org $9a32
    cmp FluteDurations,y
    bne $9a45
    lda FluteNotes,y

.end

# Remove annoying noise when zelda talks
asm b=5

.org $8e6a              ; sets $EF to #$02 to trigger the sound effect
    nop
    nop
    nop
    nop
.end

# Improve code that resets songs between areas to remove carryover notes
asm b=7

.org $cf15
ResetMusic:
  lda #$00
  sta $07e2
  sta $07e3
  jmp $d033

.org $d033
  lda #$80
  sta $eb
  rts

.org $d03d            ; reset music between areas
  jsr ResetMusic
  nop
  rts

.org $c436            ; reset music when you die
  jsr $d39a

.org $d39a
  sta $075f
  jmp ResetMusic

.end

# Make GP Intro loop forever
asm b=6
.org $9e00
CheckIntroLoop:
  ldy $0702           ; music world
  cpy #$05            ; world 5: The Abyss
  beq LoopIntro
  lda #$02            ; play song 2 (main theme)
LoopIntro:
  jmp LoadSong

.org $9b4f            ; loads the next song to play (for looping music)
  and #$01
  beq NotIntro
  jmp CheckIntroLoop
  nop
NotIntro:
  lda $07fb           ; current song
  and #$4e
  bne LoadSong
  lda $07db           ; song after fanfare
LoadSong:
  tax

.end

save /tmp/output.nes
quit
